@page "/"
@inject IProductService _productService


@if (IsProccessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>

}
else
{
 <div class="container">
    <div class="row  pb-3 pt-3 backgroundWhite">
        @foreach (var category in Products.Select(u=>u.Category.Name).Distinct())
            {

                <h2 class="text-success pl-1"><b>@category</b></h2>
                foreach (var prodcut in Products.Where(u=>u.Category.Name==category))
                {
               
        <div class="col-lg-4 col-md-6 pb-4 filter">
            <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                <div class="card-body pb-1 row">
                    <div class="col-8 h5">@prodcut.Name</div>
                    <div class="col-4 text-end"><span class="text-info h4"></span></div>
                    @prodcut.ProductPrices.OrderBy(x=>x.Price).FirstOrDefault()?.Price.ToString("c")
                </div>

                            <img class="card-img-top img-fluid d-block mx-auto mb-3" src="@prodcut.ImageUrl" alt="menuitem image">
                <div class="card-body p-1 px-3 row">
                    <div class="col-6">
                                    <span class="badge p-2 border w-100 text-dark bg-warning ">@prodcut.Category.Name</span>
                    </div>
                    <div class="col-6 border-0">
                                    <span class="badge p-2 border w-100 bg-info ">@prodcut.Color</span>
                    </div>
                    <div class="col-12 pt-2" style="font-size:13px; text-align:justify">
                                    <p>@((MarkupString)prodcut.Description)</p>
                    </div>
                    <div class="col-12 p-1">
                        <a href="details/@prodcut.Id" class="btn btn-dark form-control btn-sm p-2" style="height:40px">View Details</a>
                    </div>
                </div>
            </div>
        </div>
                }
            }
    </div>
</div>

}

@code {
    public bool IsProccessing { get; set; } = false;
    public IEnumerable<ProductDTO> Products = new List<ProductDTO>();
    protected override async Task OnInitializedAsync()
    {
        IsProccessing = true;
        Products = await _productService.GetAll();
        IsProccessing = false;
    }
}