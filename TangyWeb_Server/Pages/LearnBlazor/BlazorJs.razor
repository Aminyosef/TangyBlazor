@page "/learnblazor/blazorjs"
@inject IJSRuntime _jsRuntime

<div class="row">
    <button class="btn btn-secondary m-2" style="width:200px;" @onclick="ConfirmBox">Test Confirm Message</button>

</div>

<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />

<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmed</p>
    }
    else
    {
        <p>Confirme pending</p>
    }
</div>
@code {
    private string ConfirmMessage = "Are You Sure ?";
    private bool ConfirmResult{ get; set; }
    private async Task ConfirmBox()
    {
        ConfirmResult= await _jsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }
    private async Task ToastrSuccess()
    {
        await _jsRuntime.ToastrSuccess("Operation Successfull");
    }
    private async Task ToastrFailure()
    {
        await _jsRuntime.ToastrError("Operation Faild");
    }
    private async Task SweetAlertSuccess()
    {
        await _jsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Complate Successfully");
    }
    private async Task SweetAlertFailure()
    {
        await _jsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Faild");
    }
}
